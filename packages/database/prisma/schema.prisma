generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  email    String  @unique
  phone    String? @unique
  password String?
  roles    Role[]  @default([USER])

  googleId String? @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tokens  Token[]
  profile Profile?
  posts   Post[]

  @@map("users")
}

model Token {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  token  String @unique

  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([userId])
  @@map("tokens")
}

model Profile {
  id          String  @id @default(uuid())
  displayName String
  bio         String?
  avatarUrl   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("profiles")
}

model Post {
  id          String  @id @default(uuid())
  isPublished Boolean @default(false)
  title       String
  description String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author       User              @relation(fields: [authorId], references: [id])
  authorId     String
  translations PostTranslation[]

  @@map("posts")
}

model PostTranslation {
  id          String   @id @default(uuid())
  slug        String   @unique
  locale      String
  title       String
  description String?
  content     String
  keywords    String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@unique([postId, locale])
  @@map("post_translations")
}
